version: "3.7"

services:
  mysql:
    container_name: ${PROD_MYSQL_CONTAINER_NAME}
    image: mysql
    expose:
      - ${PROD_MYSQL_PORT}
    volumes:
      # todo add log volume
      - ${DOCKER_VOLUMNS_PATH}/${PROD_MYSQL_CONTAINER_NAME}:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci  --log-bin-trust-function-creators=1
    environment:
      - MYSQL_ROOT_PASSWORD=${PROD_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${PROD_MYSQL_SCHEME_EXPRESSION_CLOUD}
      - MYSQL_USER=${PROD_MYSQL_USER}
      - MYSQL_PASSWORD=${PROD_MYSQL_PASSWORD}
    networks:
      - nginx.expressionCloud.prod
    restart: always
    # this fix error mbind: Operation not permitted
    # ref: http://programmersought.com/article/35041685113/;jsessionid=3B61EB3296FABBF034466D0C1614749E
    security_opt:
      - seccomp:unconfined

  redis:
    container_name: ${PROD_REDIS_CONTAINER_NAME}
    image: redis
    expose:
      - ${PROD_REDIS_PORT}
    volumes:
      # todo add log volume
      - ${DOCKER_VOLUMNS_PATH}/${PROD_REDIS_CONTAINER_NAME}:/data
    networks:
      - nginx.expressionCloud.prod
    restart: always

  node.cluster:
    container_name: ${PROD_NODE_CLUSTER_CONTAINER_NAME}
    build:
      context: ../
      dockerfile: ./docker/dockerfiles/nodeCluster.dockerFile
    entrypoint: yarn pm2-runtime start ./build/express/index.js
    expose:
      - ${PROD_NODE_CLUSTER_PORT}
    volumes:
      # todo add log volume
      - ../:/usr/src/app/
    environment:
      - NODE_ENV=production
      - IS_DOCKER_CONTAINER=true
    networks:
      - nginx.expressionCloud.prod
    links:
      - mysql
      - redis
    depends_on:
      - mysql
      - redis

  nginx:
    container_name: ${NGINX_PROD_CONTAINER_NAME}
    image: nginx
    tty: true
    stdin_open: true
    ports:
      - ${PROD_NGINX_HTTP_PORT}:80
      - ${PROD_NGINX_HTTPS_PORT}:443
    environment:
      - SERVER_HOST=${PROD_HOST}
    volumes:
      # nginx.conf
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
      # todo add nginx log volume
    networks:
      - nginx.expressionCloud.prod
    links:
      - node.cluster
      - mysql
      - redis
    depends_on:
      - mysql
      - redis
      - node.cluster

networks:
  nginx.expressionCloud.prod:
    driver: "bridge"
