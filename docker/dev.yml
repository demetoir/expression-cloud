version: "3.7"

services:
  mysql:
    container_name: ${MYSQL_DEV_CONTAINER_NAME}
    image: mysql
    ports:
      - ${MYSQL_DEV_PORT}:3306
    volumes:
      - ${DOCKER_VOLUMNS_PATH}/${MYSQL_DEV_CONTAINER_NAME}:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci  --log-bin-trust-function-creators=1
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_DEV_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DEV_SCHEME}
      - MYSQL_USER=${MYSQL_DEV_USER}
      - MYSQL_PASSWORD=${MYSQL_DEV_PASSWORD}
    networks:
      - nginx.docker
    restart: always

  redis:
    container_name: ${REDIS_DEV_CONTAINER_NAME}
    image: redis
    ports:
      - ${REDIS_DEV_PORT}:6379
    volumes:
      - ${DOCKER_VOLUMNS_PATH}/${REDIS_DEV_CONTAINER_NAME}:/data
    networks:
      - nginx.docker
    restart: always

  express:
    container_name: ${EXPRESS_DEV_CONTAINER_NAME}
    build:
      context: ../
      dockerfile: ./docker/dockerfiles/node.dev.Dockerfile
    entrypoint: yarn start:express
    ports:
      - ${EXPRESS_DEV_PORT}:${EXPRESS_DEV_PORT}
    volumes:
      - ../:/usr/src/app/
    environment:
      - NODE_env=development
      - IS_DOCKER_CONTAINER=true
    networks:
      - nginx.docker
    links:
      - mysql
      - redis
    depends_on:
      - mysql
      - redis

  nginx:
    container_name: ${NGINX_DEV_CONTAINER_NAME}
    image: nginx
    tty: true
    stdin_open: true
    ports:
      - ${NGINX_DEV_EXPOSE_PORT}:80
    environment:
      - SERVER_HOST=${DEV_HOST}
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf
    networks:
      - nginx.docker
    links:
      - express
      - graphql
      - socket
      - mysql
      - redis

networks:
  nginx.docker:
    driver: "bridge"
